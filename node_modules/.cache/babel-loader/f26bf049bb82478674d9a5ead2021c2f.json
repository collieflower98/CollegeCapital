{"ast":null,"code":"var _jsxFileName = \"/Users/collieflower/Desktop/cc-webapp/src/components/financials/Financials.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\nimport './Financials.css';\nimport FundList from './FundList';\nimport CreateFund from \"./CreateFund\";\nimport { editFund } from \"../../store/actions/fundActions\";\nimport Select from \"react-select\";\n\nclass Financials extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleEdit = e => {\n      e.preventDefault();\n      this.props.editFund(this.state);\n    };\n\n    this.handleDel = e => {\n      console.log(e);\n      e.preventDefault();\n      this.props.delFund(this.state);\n    };\n\n    this.handleSelectChange = e => {\n      console.log(e.value);\n      this.setState({\n        fundSelected: e.value\n      });\n    };\n\n    this.handleEditSelectChange = e => {\n      this.setState({\n        fundType: e.value\n      });\n    };\n\n    this.state = {\n      showCreateFund: false,\n      showEditFund: false\n    };\n  }\n\n  toggleCreateFund() {\n    this.setState({\n      showCreateFund: !this.state.showCreateFund\n    });\n  } // handleSet = (e) => {\n  //     e.preventDefault();\n  //     this.props.setFund()\n  // }\n\n\n  render() {\n    if (!auth.uid) return React.createElement(Redirect, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }); // console.log(this.props);\n    // console.log(this.state);\n    // console.log('render');\n    //f(funds) return <Redirect to= '/signin'/>;\n\n    const funds = this.props.funds;\n    console.log(funds);\n    let fundOptions = [];\n    if (this.props.funds != null) fundOptions = funds.map(v => ({\n      label: v.fundType + ': ' + v.nickname,\n      value: v.id\n    })); // console.log(funds);\n\n    return React.createElement(\"div\", {\n      className: \"container mt-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card z-depth-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.showCreateFund ? React.createElement(CreateFund, {\n      closePopup: this.toggleCreateFund.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn green lighten-1 center mt-10 mb-10\",\n      onClick: this.toggleCreateFund.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"New Financial Account\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 m6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.funds == null ? null : React.createElement(FundList, {\n      funds: {\n        funds\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s12 m6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.props.funds == null ? null : React.createElement(\"div\", {\n      className: \"card z-depth-0 fund-operation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Select, {\n      className: \"funds\",\n      name: \"funds\",\n      onChange: this.handleSelectChange,\n      options: fundOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"white\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: 'nickname',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"nickname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Nickname\")), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      id: 'balance',\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"balance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Balance\")), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      id: 'lowBalanceLimit',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"lowBalanceLimit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Low Balance Limit\")), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: 'largeTransactionLimit',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"largeTransactionLimit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Large Transaction Limit\")), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: 'spendingLimit',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"spendingLimit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Spending Limit\")), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Select, {\n      className: \"fundtype\",\n      name: \"fundtype\",\n      placeholder: \"Fund Type\",\n      options: [{\n        value: 'PayPal',\n        label: 'PayPal'\n      }, {\n        value: 'Dining Dollar',\n        label: 'Dining Dollar'\n      }, {\n        value: 'Boiler Express',\n        label: 'Boiler Express'\n      }, {\n        value: 'Financial Aid',\n        label: 'Financial Aid'\n      }, {\n        value: 'Bank',\n        label: 'Bank'\n      }],\n      onChange: this.handleEditSelectChange,\n      defaultValue: {\n        value: 'paypal',\n        label: 'PayPal'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"btn green lighten-1\",\n      onClick: this.handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Edit Account\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  // if(typeof state.firestore.ordered.funds == 'undefined'){\n  //     console.log('invalid');\n  //     return {};\n  // }\n  // else{\n  //     console.log('valid');\n  //     return {\n  //         funds: state.firestore.ordered.funds\n  //     };\n  // }\n  return {\n    funds: state.firestore.ordered.funds\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    editFund: fund => dispatch(editFund(fund))\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{\n  collection: 'funds'\n}]))(Financials);","map":{"version":3,"sources":["/Users/collieflower/Desktop/cc-webapp/src/components/financials/Financials.js"],"names":["React","Component","connect","firestoreConnect","compose","Redirect","signUp","FundList","CreateFund","editFund","Select","Financials","constructor","props","handleChange","e","setState","target","id","value","handleEdit","preventDefault","state","handleDel","console","log","delFund","handleSelectChange","fundSelected","handleEditSelectChange","fundType","showCreateFund","showEditFund","toggleCreateFund","render","auth","uid","funds","fundOptions","map","v","label","nickname","bind","handleSubmit","mapStateToProps","firestore","ordered","mapDispatchToProps","dispatch","fund","collection"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from \"react-router-dom\";\nimport {signUp} from \"../../store/actions/authActions\";\nimport './Financials.css'\nimport FundList from './FundList'\nimport CreateFund from \"./CreateFund\";\nimport {editFund} from \"../../store/actions/fundActions\";\nimport Select from \"react-select\";\n\nclass Financials extends Component{\n    constructor(props) {\n        super(props);\n        this.state = { showCreateFund: false,\n        showEditFund: false};\n    }\n\n    toggleCreateFund() {\n        this.setState({\n            showCreateFund: !this.state.showCreateFund\n        })\n    }\n\n    // handleSet = (e) => {\n    //     e.preventDefault();\n    //     this.props.setFund()\n    // }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleEdit = (e) => {\n        e.preventDefault();\n        this.props.editFund(this.state)\n    }\n\n    handleDel = (e) => {\n        console.log(e)\n        e.preventDefault();\n        this.props.delFund(this.state)\n    }\n\n    handleSelectChange = (e) => {\n        console.log(e.value)\n        this.setState({\n            fundSelected: e.value\n        })\n    }\n\n    handleEditSelectChange = (e) => {\n        this.setState({\n            fundType: e.value\n        })\n    }\n\n    render() {\n        if(!auth.uid) return <Redirect to= '/signin'/>\n        // console.log(this.props);\n        // console.log(this.state);\n        // console.log('render');\n        //f(funds) return <Redirect to= '/signin'/>;\n        const funds = this.props.funds;\n        console.log(funds)\n\n        let fundOptions = [];\n\n        if (this.props.funds != null)\n            fundOptions = funds.map(v => ({\n                label: v.fundType + ': ' + v.nickname,\n                value: v.id\n            }))\n\n        // console.log(funds);\n        return(\n            <div className={\"container mt-10\"}>\n                <div className =\"card z-depth-0\">\n                    {this.state.showCreateFund\n                        ?\n                        <CreateFund\n                            closePopup={this.toggleCreateFund.bind(this)}\n                        />\n                        :\n                        <div className={\"container center\"}>\n                            <button className=\"btn green lighten-1 center mt-10 mb-10\" onClick={this.toggleCreateFund.bind(this)}>New Financial Account</button>\n                        </div>\n                    }\n                </div>\n                <div className={\"row\"}>\n                    <div className={\"col s12 m6\"}>\n                        {this.props.funds == null\n                            ?\n                            null\n                            :\n                            <FundList funds = {{funds}}/>\n                        }\n                    </div>\n                    <div className={\"col s12 m6\"}>\n                        {this.props.funds == null\n                            ?\n                            null\n                            :\n                            <div className={\"card z-depth-0 fund-operation\"}>\n                                <div className={\"card-content grey-text text-darken-3\"}>\n                                    <Select\n                                        className={\"funds\"}\n                                        name={\"funds\"}\n                                        onChange={this.handleSelectChange}\n                                        options={fundOptions}\n                                    />\n                                    <div className={\"container\"}>\n                                        <form className={\"white\"} onSubmit={this.handleSubmit}>\n                                            <div className={\"input-field\"}>\n                                                <input type={\"text\"} id={'nickname'} onChange={this.handleChange}/>\n                                                <label htmlFor={\"nickname\"}>Nickname</label>\n                                            </div>\n                                            <div className={\"input-field\"}>\n                                                <input type={\"number\"} id={'balance'} onChange={this.handleChange} required/>\n                                                <label htmlFor={\"balance\"}>Balance</label>\n                                            </div>\n                                            <div className={\"input-field\"}>\n                                                <input type={\"number\"} id={'lowBalanceLimit'} onChange={this.handleChange}/>\n                                                <label htmlFor={\"lowBalanceLimit\"}>Low Balance Limit</label>\n                                            </div>\n                                            <div className={\"input-field\"}>\n                                                <input type={\"text\"} id={'largeTransactionLimit'} onChange={this.handleChange}/>\n                                                <label htmlFor={\"largeTransactionLimit\"}>Large Transaction Limit</label>\n                                            </div>\n                                            <div className={\"input-field\"}>\n                                                <input type={\"text\"} id={'spendingLimit'} onChange={this.handleChange}/>\n                                                <label htmlFor={\"spendingLimit\"}>Spending Limit</label>\n                                            </div>\n                                            <div className={\"input-field\"}>\n                                                <Select\n                                                    className={\"fundtype\"}\n                                                    name={\"fundtype\"}\n                                                    placeholder={\"Fund Type\"}\n                                                    options = {[\n                                                        { value: 'PayPal', label: 'PayPal'},\n                                                        { value: 'Dining Dollar', label: 'Dining Dollar'},\n                                                        { value: 'Boiler Express', label: 'Boiler Express'},\n                                                        { value: 'Financial Aid', label: 'Financial Aid'},\n                                                        { value: 'Bank', label: 'Bank'}\n                                                    ]}\n                                                    onChange={this.handleEditSelectChange}\n                                                    defaultValue={{ value: 'paypal', label: 'PayPal'}}\n                                                />\n                                            </div>\n                                        </form>\n                                        <button className={\"btn green lighten-1\"} onClick={this.handleEdit}>Edit Account</button>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    // console.log(state);\n    // if(typeof state.firestore.ordered.funds == 'undefined'){\n    //     console.log('invalid');\n    //     return {};\n    // }\n    // else{\n    //     console.log('valid');\n    //     return {\n    //         funds: state.firestore.ordered.funds\n    //     };\n    // }\n    return {\n        funds: state.firestore.ordered.funds\n    };\n};\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        editFund: (fund)=> dispatch(editFund(fund))\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        {collection: 'funds'}\n    ])\n)(Financials)"]},"metadata":{},"sourceType":"module"}