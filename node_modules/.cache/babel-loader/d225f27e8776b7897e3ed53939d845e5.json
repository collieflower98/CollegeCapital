{"ast":null,"code":"import _objectSpread from\"/Users/collieflower/Desktop/cc-webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// export const createMemo = (id) => {\n//     return {\n//         type : 'CREATE_MEM',\n//         id : id,\n//     }\n// }\nexport var createMemo=function createMemo(mem){return function(dispatch,getState,_ref){var getFirebase=_ref.getFirebase,getFirestore=_ref.getFirestore;var firestore=getFirestore();var profile=getState().firebase.profile;var userId=getState().firebase.auth.uid;firestore.collection('memos').add(_objectSpread({},mem,{owner:profile.firstName+' '+profile.lastName,uid:userId,createdAt:new Date()})).then(function(){dispatch({type:'CREATE_MEM',mem:mem});}).catch(function(err){dispatch({type:'CREATE_FUND_ERR'},err);});};};export var deleteMemo=function deleteMemo(mem){return function(dispatch,getState,_ref2){var getFirebase=_ref2.getFirebase,getFirestore=_ref2.getFirestore;var firestore=getFirestore();var profile=getState().firebase.profile;var userId=getState().firebase.auth.uid;firestore.collection('memos').doc(mem).delete().then(function(){dispatch({type:'DELTE_DOC',mem:mem});}).catch(function(err){dispatch({type:'CREATE_FUND_ERR'},err);});};};","map":{"version":3,"sources":["/Users/collieflower/Desktop/cc-webapp/src/store/actions/memActions.js"],"names":["createMemo","mem","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","userId","auth","uid","collection","add","owner","firstName","lastName","createdAt","Date","then","type","catch","err","deleteMemo","doc","delete"],"mappings":"uHAAA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAO,IAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAS,CAC/B,MAAO,UAACC,QAAD,CAAWC,QAAX,MAAsD,IAAhCC,CAAAA,WAAgC,MAAhCA,WAAgC,CAAnBC,YAAmB,MAAnBA,YAAmB,CACzD,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CACA,GAAME,CAAAA,OAAO,CAAGJ,QAAQ,GAAGK,QAAX,CAAoBD,OAApC,CACA,GAAME,CAAAA,MAAM,CAAGN,QAAQ,GAAGK,QAAX,CAAoBE,IAApB,CAAyBC,GAAxC,CACAL,SAAS,CAACM,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,kBACOZ,GADP,EAEIa,KAAK,CAAEP,OAAO,CAACQ,SAAR,CAAoB,GAApB,CAA0BR,OAAO,CAACS,QAF7C,CAGIL,GAAG,CAAEF,MAHT,CAIIQ,SAAS,CAAE,GAAIC,CAAAA,IAAJ,EAJf,IAKGC,IALH,CAKQ,UAAM,CACVjB,QAAQ,CAAC,CAAEkB,IAAI,CAAE,YAAR,CAAsBnB,GAAG,CAAHA,GAAtB,CAAD,CAAR,CACH,CAPD,EAOGoB,KAPH,CAOS,SAACC,GAAD,CAAS,CACdpB,QAAQ,CAAC,CAAEkB,IAAI,CAAE,iBAAR,CAAD,CAA6BE,GAA7B,CAAR,CACH,CATD,EAUH,CAdD,CAeH,CAhBM,CAkBP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACtB,GAAD,CAAS,CAC/B,MAAO,UAACC,QAAD,CAAWC,QAAX,OAAsD,IAAhCC,CAAAA,WAAgC,OAAhCA,WAAgC,CAAnBC,YAAmB,OAAnBA,YAAmB,CACzD,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CACA,GAAME,CAAAA,OAAO,CAAGJ,QAAQ,GAAGK,QAAX,CAAoBD,OAApC,CACA,GAAME,CAAAA,MAAM,CAAGN,QAAQ,GAAGK,QAAX,CAAoBE,IAApB,CAAyBC,GAAxC,CACAL,SAAS,CAACM,UAAV,CAAqB,OAArB,EAA8BY,GAA9B,CAAkCvB,GAAlC,EAAuCwB,MAAvC,GAAgDN,IAAhD,CAAqD,UAAM,CACvDjB,QAAQ,CAAC,CAAEkB,IAAI,CAAE,WAAR,CAAqBnB,GAAG,CAAHA,GAArB,CAAD,CAAR,CACH,CAFD,EAEGoB,KAFH,CAES,SAACC,GAAD,CAAS,CACdpB,QAAQ,CAAC,CAAEkB,IAAI,CAAE,iBAAR,CAAD,CAA6BE,GAA7B,CAAR,CACH,CAJD,EAKH,CATD,CAUH,CAXM","sourcesContent":["// export const createMemo = (id) => {\n//     return {\n//         type : 'CREATE_MEM',\n//         id : id,\n//     }\n\n// }\n\nexport const createMemo = (mem) => {\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const userId = getState().firebase.auth.uid;\n        firestore.collection('memos').add({\n            ...mem,\n            owner: profile.firstName + ' ' + profile.lastName,\n            uid: userId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_MEM', mem });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_FUND_ERR'}, err);\n        })\n    }\n};\n\nexport const deleteMemo = (mem) => {\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const userId = getState().firebase.auth.uid;\n        firestore.collection('memos').doc(mem).delete().then(() => {\n            dispatch({ type: 'DELTE_DOC', mem });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_FUND_ERR'}, err);\n        })\n    }\n};"]},"metadata":{},"sourceType":"module"}