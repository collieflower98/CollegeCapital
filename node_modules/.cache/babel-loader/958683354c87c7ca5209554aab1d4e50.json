{"ast":null,"code":"export var updateProfile=function updateProfile(userProfile){return function(dispatch,getState,_ref){var getFirebase=_ref.getFirebase,getFirestore=_ref.getFirestore;var firebase=getFirebase();var firestore=getFirestore();var userId=getState().firebase.auth.uid;firestore.collection('users').doc(userId).update({firstName:userProfile.firstName,lastName:userProfile.lastName,email:userProfile.email,phone:userProfile.phone,address:userProfile.address,studentId:userProfile.studentId}).then(function(){dispatch({type:'UPDATE_SUCCESS',userProfile:userProfile});alert(\"update success\");}).catch(function(err){dispatch({type:'UPDATE_ERROR',err:err});alert(\"update failure\");});};};","map":{"version":3,"sources":["/Users/collieflower/Desktop/cc-webapp/src/store/actions/updateActions.js"],"names":["updateProfile","userProfile","dispatch","getState","getFirebase","getFirestore","firebase","firestore","userId","auth","uid","collection","doc","update","firstName","lastName","email","phone","address","studentId","then","type","alert","catch","err"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,aAAa,CAAE,QAAfA,CAAAA,aAAe,CAACC,WAAD,CAAe,CACvC,MAAM,UAACC,QAAD,CAAUC,QAAV,MAAgD,IAA5BC,CAAAA,WAA4B,MAA5BA,WAA4B,CAAhBC,YAAgB,MAAhBA,YAAgB,CAClD,GAAMC,CAAAA,QAAQ,CAAGF,WAAW,EAA5B,CACA,GAAMG,CAAAA,SAAS,CAAEF,YAAY,EAA7B,CACA,GAAMG,CAAAA,MAAM,CAAEL,QAAQ,GAAGG,QAAX,CAAoBG,IAApB,CAAyBC,GAAvC,CACAH,SAAS,CAACI,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCJ,MAAlC,EAA0CK,MAA1C,CAAiD,CAC7CC,SAAS,CAAGb,WAAW,CAACa,SADqB,CAE7CC,QAAQ,CAAGd,WAAW,CAACc,QAFsB,CAG7CC,KAAK,CAAGf,WAAW,CAACe,KAHyB,CAI7CC,KAAK,CAAGhB,WAAW,CAACgB,KAJyB,CAK7CC,OAAO,CAAEjB,WAAW,CAACiB,OALwB,CAM7CC,SAAS,CAAElB,WAAW,CAACkB,SANsB,CAAjD,EAQGC,IARH,CAQQ,UAAI,CACRlB,QAAQ,CAAC,CAACmB,IAAI,CAAE,gBAAP,CAAwBpB,WAAW,CAAXA,WAAxB,CAAD,CAAR,CACAqB,KAAK,CAAC,gBAAD,CAAL,CAEH,CAZD,EAYGC,KAZH,CAYS,SAAAC,GAAG,CAAE,CACVtB,QAAQ,CAAC,CAACmB,IAAI,CAAE,cAAP,CAAsBG,GAAG,CAAHA,GAAtB,CAAD,CAAR,CACAF,KAAK,CAAC,gBAAD,CAAL,CACH,CAfD,EAgBH,CApBD,CAqBH,CAtBM","sourcesContent":["export const updateProfile =(userProfile)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        const firebase = getFirebase();\n        const firestore =getFirestore();\n        const userId= getState().firebase.auth.uid;\n        firestore.collection('users').doc(userId).update({\n            firstName : userProfile.firstName,\n            lastName : userProfile.lastName,\n            email : userProfile.email,\n            phone : userProfile.phone,\n            address: userProfile.address,\n            studentId: userProfile.studentId\n\n        }).then(()=>{\n            dispatch({type: 'UPDATE_SUCCESS',userProfile})\n            alert(\"update success\");\n            \n        }).catch(err=>{\n            dispatch({type: 'UPDATE_ERROR',err})\n            alert(\"update failure\");\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}