{"ast":null,"code":"export const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      firebase.auth().currentUser.sendEmailVerification();\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        email: newUser.email,\n        address: newUser.address,\n        phone: newUser.phone,\n        studentId: newUser.studentId\n      });\n    }).then(() => {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const resetPassword = email => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().sendPasswordResetEmail(email).then(function () {// Email sent.\n    }).catch(function (error) {// An error happened.\n    });\n  };\n};","map":{"version":3,"sources":["/Users/collieflower/Desktop/cc-webapp/src/store/actions/authActions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","currentUser","sendEmailVerification","collection","doc","user","uid","set","firstName","lastName","address","phone","studentId","resetPassword","sendPasswordResetEmail","error"],"mappings":"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","sourcesContent":["export const signIn =(credentials) =>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'LOGIN_ERROR',err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut =()=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp =(newUser)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore =getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            firebase.auth().currentUser.sendEmailVerification();\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                email: newUser.email,\r\n                address: newUser.address,\r\n                phone: newUser.phone,\r\n                studentId: newUser.studentId\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err=>{\r\n            dispatch({type: 'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetPassword =(email)=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().sendPasswordResetEmail(email).then(function() {\r\n            // Email sent.\r\n          }).catch(function(error) {\r\n            // An error happened.\r\n          });    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}