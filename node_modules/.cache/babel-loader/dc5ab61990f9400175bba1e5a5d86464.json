{"ast":null,"code":"var _jsxFileName = \"/Users/collieflower/Desktop/cc-webapp/src/components/Memos/memos.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { createMemo } from \"../../store/actions/memActions\";\nimport MemFunc from \"./memFunc\";\nimport { Redirect } from 'react-router-dom';\n\nclass Memos extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      content: \"\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handelSubmit = event => {\n      event.preventDefault();\n      this.props.creatememo(this.state);\n    };\n  }\n\n  render() {\n    let data = undefined; //        console.log(\"UID\", this.props.auth.uid);\n\n    if (this.props.memos !== undefined) {\n      data = this.props.memos.filter(memo => {\n        return this.props.auth.uid == memo.uid;\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handelSubmit,\n      className: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"grey-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Create Memos\"), React.createElement(\"div\", {\n      id: \"title\",\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"textarea\", {\n      id: \"content\",\n      className: \"materialize-textarea\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn green lighten-1 z-depth-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Create\"))), React.createElement(MemFunc, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    memos: state.firestore.ordered.memos,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    creatememo: id => {\n      dispatch(createMemo(id));\n    }\n  };\n}; //export default connect(matchStatetoProps , mapDispatchToProps)(Memos);\n\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{\n  collection: 'memos'\n}]))(Memos);","map":{"version":3,"sources":["/Users/collieflower/Desktop/cc-webapp/src/components/Memos/memos.js"],"names":["React","Component","connect","compose","firestoreConnect","createMemo","MemFunc","Redirect","Memos","state","title","content","handleChange","event","setState","target","id","value","handelSubmit","preventDefault","props","creatememo","render","data","undefined","memos","filter","memo","auth","uid","mapStateToProps","firestore","ordered","firebase","mapDispatchToProps","dispatch","collection"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {createMemo} from \"../../store/actions/memActions\"\nimport MemFunc from \"./memFunc\";\nimport {Redirect} from 'react-router-dom'\n\n\n\n\nclass Memos extends Component {\n\n    state = {\n        title : \"\",\n        content : \"\",\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id] : event.target.value,\n        })\n    }\n\n\n    handelSubmit = (event) => {\n        event.preventDefault();\n        this.props.creatememo(this.state);\n    }\n\n    \n\n\n\n    render () {      \n        let data = undefined;\n//        console.log(\"UID\", this.props.auth.uid);\n        if (this.props.memos !== undefined) {\n          data = this.props.memos.filter( memo => {\n             return this.props.auth.uid == memo.uid\n         });\n        }\n\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handelSubmit} className =\"white\">\n                <h5 className =\"grey-text text-darken-3\">Create Memos</h5>\n                <div id = \"title\" className = \"input-field\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type =\"text\" id=\"title\"onChange ={this.handleChange}/>\n                </div>\n                <div className = \"input-field\">\n                    <label htmlFor=\"content\">Content</label>\n                    <textarea  id=\"content\"  className=\"materialize-textarea\" onChange ={this.handleChange}></textarea>\n                </div>\n                <div className =\"input-field\">\n                    <button className = \"btn green lighten-1 z-depth-0\">Create</button>\n                </div>\n                </form>\n\n                <MemFunc data={data} />\n\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        memos : state.firestore.ordered.memos,\n        auth: state.firebase.auth\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        creatememo: (id) => { dispatch(createMemo(id))}\n    }\n}\n\n\n//export default connect(matchStatetoProps , mapDispatchToProps)(Memos);\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        {collection: 'memos'}\n    ])\n)(Memos)"]},"metadata":{},"sourceType":"module"}