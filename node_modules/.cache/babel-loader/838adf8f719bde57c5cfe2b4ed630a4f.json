{"ast":null,"code":"export const updateProfile = userProfile => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const userId = getState().firebase.auth.uid;\n    firestore.collection('users').doc(userId).update({\n      firstName: userProfile.firstName,\n      lastName: userProfile.lastName,\n      email: userProfile.email,\n      phone: userProfile.phone,\n      address: userProfile.address,\n      studentId: userProfile.studentId\n    }).then(() => {\n      dispatch({\n        type: 'UPDATE_SUCCESS',\n        userProfile\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'UPDATE_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const getProfileData = userProfile => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    const userID = getState().firebase.auth.uid;\n    firestore.collection('users').doc(userID).get().then(function (doc) {\n      if (doc.exists) {\n        console.log(\"Doc data\", doc.data());\n        userProfile.firstName = doc.data().firstName;\n        userProfile.lastName = doc.data().lastName;\n        userProfile.email = doc.data().email;\n        userProfile.phone = doc.data().phone;\n        userProfile.address = doc.data().address;\n        userProfile.studentId = doc.data().studentId;\n      } else {\n        console.log(\"Doc does not exist\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting doc\");\n    });\n  };\n};","map":{"version":3,"sources":["/Users/collieflower/Desktop/cc-webapp/src/store/actions/updateActions.js"],"names":["updateProfile","userProfile","dispatch","getState","getFirebase","getFirestore","firebase","firestore","userId","auth","uid","collection","doc","update","firstName","lastName","email","phone","address","studentId","then","type","catch","err","getProfileData","userID","get","exists","console","log","data","error"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGC,WAAD,IAAe;AACvC,SAAM,CAACC,QAAD,EAAUC,QAAV,EAAmB;AAACC,IAAAA,WAAD;AAAaC,IAAAA;AAAb,GAAnB,KAAgD;AAClD,UAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,UAAMG,SAAS,GAAEF,YAAY,EAA7B;AACA,UAAMG,MAAM,GAAEL,QAAQ,GAAGG,QAAX,CAAoBG,IAApB,CAAyBC,GAAvC;AACAH,IAAAA,SAAS,CAACI,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCJ,MAAlC,EAA0CK,MAA1C,CAAiD;AAC7CC,MAAAA,SAAS,EAAGb,WAAW,CAACa,SADqB;AAE7CC,MAAAA,QAAQ,EAAGd,WAAW,CAACc,QAFsB;AAG7CC,MAAAA,KAAK,EAAGf,WAAW,CAACe,KAHyB;AAI7CC,MAAAA,KAAK,EAAGhB,WAAW,CAACgB,KAJyB;AAK7CC,MAAAA,OAAO,EAAEjB,WAAW,CAACiB,OALwB;AAM7CC,MAAAA,SAAS,EAAElB,WAAW,CAACkB;AANsB,KAAjD,EAQGC,IARH,CAQQ,MAAI;AACRlB,MAAAA,QAAQ,CAAC;AAACmB,QAAAA,IAAI,EAAE,gBAAP;AAAwBpB,QAAAA;AAAxB,OAAD,CAAR;AACH,KAVD,EAUGqB,KAVH,CAUSC,GAAG,IAAE;AACVrB,MAAAA,QAAQ,CAAC;AAACmB,QAAAA,IAAI,EAAE,cAAP;AAAsBE,QAAAA;AAAtB,OAAD,CAAR;AACH,KAZD;AAaH,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMC,cAAc,GAAGvB,WAAD,IAAe;AACxC,SAAM,CAACC,QAAD,EAAUC,QAAV,EAAmB;AAACC,IAAAA,WAAD;AAAaC,IAAAA;AAAb,GAAnB,KAAgD;AAClD,UAAME,SAAS,GAAGF,YAAY,EAA9B;AACA,UAAMoB,MAAM,GAAGtB,QAAQ,GAAGG,QAAX,CAAoBG,IAApB,CAAyBC,GAAxC;AACAH,IAAAA,SAAS,CAACI,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCa,MAAlC,EAA0CC,GAA1C,GAAgDN,IAAhD,CAAqD,UAASR,GAAT,EAAc;AAC/D,UAAIA,GAAG,CAACe,MAAR,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBjB,GAAG,CAACkB,IAAJ,EAAxB;AACA7B,QAAAA,WAAW,CAACa,SAAZ,GAAwBF,GAAG,CAACkB,IAAJ,GAAWhB,SAAnC;AACAb,QAAAA,WAAW,CAACc,QAAZ,GAAuBH,GAAG,CAACkB,IAAJ,GAAWf,QAAlC;AACAd,QAAAA,WAAW,CAACe,KAAZ,GAAoBJ,GAAG,CAACkB,IAAJ,GAAWd,KAA/B;AACAf,QAAAA,WAAW,CAACgB,KAAZ,GAAoBL,GAAG,CAACkB,IAAJ,GAAWb,KAA/B;AACAhB,QAAAA,WAAW,CAACiB,OAAZ,GAAsBN,GAAG,CAACkB,IAAJ,GAAWZ,OAAjC;AACAjB,QAAAA,WAAW,CAACkB,SAAZ,GAAwBP,GAAG,CAACkB,IAAJ,GAAWX,SAAnC;AACH,OARD,MAQO;AACHS,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;AACJ,KAZD,EAYGP,KAZH,CAYS,UAASS,KAAT,EAAgB;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KAdD;AAeH,GAlBD;AAmBH,CApBM","sourcesContent":["export const updateProfile =(userProfile)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        const firebase = getFirebase();\n        const firestore =getFirestore();\n        const userId= getState().firebase.auth.uid;\n        firestore.collection('users').doc(userId).update({\n            firstName : userProfile.firstName,\n            lastName : userProfile.lastName,\n            email : userProfile.email,\n            phone : userProfile.phone,\n            address: userProfile.address,\n            studentId: userProfile.studentId\n\n        }).then(()=>{\n            dispatch({type: 'UPDATE_SUCCESS',userProfile})\n        }).catch(err=>{\n            dispatch({type: 'UPDATE_ERROR',err})\n        })\n    }\n}\n\nexport const getProfileData =(userProfile)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        const firestore = getFirestore();\n        const userID = getState().firebase.auth.uid;\n        firestore.collection('users').doc(userID).get().then(function(doc) {\n            if (doc.exists) {\n                console.log(\"Doc data\", doc.data());\n                userProfile.firstName = doc.data().firstName;\n                userProfile.lastName = doc.data().lastName;\n                userProfile.email = doc.data().email;\n                userProfile.phone = doc.data().phone;\n                userProfile.address = doc.data().address;\n                userProfile.studentId = doc.data().studentId;\n            } else {\n                console.log(\"Doc does not exist\");\n            }\n        }).catch(function(error) {\n            console.log(\"Error getting doc\");\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}